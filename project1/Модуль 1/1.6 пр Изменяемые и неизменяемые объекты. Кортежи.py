# 2. Задайте переменные разных типов данных:
# 2.1 Создайте переменную immutable_var и присвойте ей кортеж из нескольких элементов разных типов данных.
immutable_var = 1, 1.5, 'элемент', True
# 2.2 Выполните операции вывода кортежа immutable_var на экран.
print('Кортеж "immutable_var":', immutable_var)

# 3. Изменение значений переменных:
# Попытайтесь изменить элементы кортежа immutable_var. Объясните, почему нельзя изменить значения элементов кортежа.

# После попытки присвоить первому элементу кортежа значение "2" с помощью: immutable_var[0] = 2, в консоли отображается ошибка:
# Traceback (most recent call last):
#   File "D:\projects_for_university\Lessons\project1\Модуль 1\module_1_5.py", line 8, in <module>
#     immutable_var[0] = 2
#     ~~~~~~~~~~~~~^^^
# TypeError: 'tuple' object does not support item assignment
# В ошибке написано, что объект типа 'tuple' не поддерживает возможность изменений значений элементов.
# Кортеж по сути является неизменяемой коллекцией элементов.
# Но если элементом будет являться список, то внутри самого списка можно менять элементы по индексу.

# 4. Создание изменяемых структур данных:
# 4.1 Создайте переменную mutable_list и присвойте ей список из нескольких элементов.
# Первый элемент кортежа это строка, а второй список. Специально так написал, чтобы показать,
# что при изменении списка выбираются сначала индекс самого списка, а потом индекс элемента списка
mutable_list = ('Второй элемент кортежа является списком:',[0, 1, 2, 3 ,4])
# 4.2 Измените элементы списка mutable_list.
# Изменим первый элемент списка в кортеже
mutable_list[1][0] = 5
# Изменим второй элемент списка в кортеже
mutable_list[1][1] = 6
# Изменим третий элемент списка в кортеже
mutable_list[1][2] = 7
# Изменим четвёртый элемент списка в кортеже
mutable_list[1][3] = 8
# Изменим пятый элемент списка в кортеже
mutable_list[1][4] = 9
# Выведите на экран измененный список mutable_list.
print('Изменённый кортеж "mutable_list":', mutable_list )