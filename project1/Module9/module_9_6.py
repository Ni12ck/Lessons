# Задача:
# Напишите функцию-генератор all_variants(text), которая принимает строку text и возвращает объект-генератор, при каждой
# итерации которого будет возвращаться подпоследовательности переданной строки.

# Пункты задачи:
# 1. Напишите функцию-генератор all_variants(text).
# 2. Опишите логику работы внутри функции all_variants.
# 3. Вызовите функцию all_variants и выполните итерации.

# Пример результата выполнения программы:
# Пример работы функции:
# a = all_variants("abc")
# for i in a:
#   print(i)
# Вывод на консоль:
# a
# b
# c
# ab
# bc
# abc

# Написал функцию-генератор all_variants(text), которая принимает строку text и возвращает объект-генератор, при каждой
# итерации которого будет возвращаться подпоследовательности переданной строки.
def all_variants(text):
    # Переменная len_text, которая хранит длину строки text плюс 1. Это необходимо, чтобы удобнее было работать с
    # индексами.
    len_text = len(text) + 1
    # Внешний цикл с переменной x перебирает все возможные длины подстрок от 1 до длины исходной строки включительно.
    # То есть он будет изменяться от 1 до len_text.
    # Для строки "abc", x будет перебирать значения 1, 2 и 3.
    for x in range(1, len_text):
        # Внутренний цикл с переменной y генерирует все начальные индексы подстрок длины x. Для каждой длины подстроки
        # мы перебираем все возможные позиции начала подстроки.
        # Для строки "abc", при x = 1 (длина подстроки 1), внутренний цикл будет генерировать индексы 0, 1, 2.
        # При x = 2 (длина подстроки 2) — индексы 0, 1. При x = 3 (длина подстроки 3) — индекс 0.
        for y in range(len_text - x):
            # Получение подстрок с индексом y и длиной x
            yield text[y:y + x]


# Присвоение переменной text результата выполнения функции all_variants("abc")
text = all_variants("abc")
# Для строки "abc" функция сгенерирует такие подстроки:
# Длина 1: "a", "b", "c"
# Длина 2: "ab", "bc"
# Длина 3: "abc"
# В итоге на выходе мы получим список всех подстрок:
print(f'Список всех подстрок: {list(text)}')
