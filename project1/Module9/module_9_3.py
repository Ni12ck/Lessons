# Дано 2 списка:
# first = ['Strings', 'Student', 'Computers']
# second = ['Строка', 'Урбан', 'Компьютер']

# Необходимо создать 2 генераторных сборки:
# 1. В переменную first_result запишите генераторную сборку, которая высчитывает разницу длин строк из списков first и
# second, если их длины не равны. Для перебора строк попарно из двух списков используйте функцию zip.
# 2. В переменную second_result запишите генераторную сборку, которая содержит результаты сравнения длин строк в
# одинаковых позициях из списков first и second. Составьте эту сборку НЕ используя функцию zip. Используйте функции
# range и len.

# Пример выполнения кода:
# print(list(first_result))
# print(list(second_result))

# Вывод в консоль:
# [1, 2]
# [False, False, True]

# Примечания:
# Это небольшая практика, поэтому важность выполнения каждого условия обязательна.

# Дано 2 списка:
first = ['Strings', 'Student', 'Computers']
second = ['Строка', 'Урбан', 'Компьютер']

# В переменную first_result записал генераторную сборку, которая высчитывает разницу длин строк из списков first и
# second, если их длины не равны. Для перебора строк попарно из двух списков использую функцию zip.
first_result = (len(x) - len(y) for x, y in zip(first, second) if len(x) != len(y))
print(f'Разность длин пар строк в списках: {list(first_result)}')

# В переменную second_result записал генераторную сборку, которая содержит результаты сравнения длин строк в одинаковых
# позициях из списков first и second. Составил эту сборку не используя функцию zip, а используя функции range и len.
second_result = (len(first[i]) == len(second[i]) for i in range(len(first)))
print(f'Сравнение длин строк соответствующих по индексу: {list(second_result)}')
