# Задача "Распаковка":

# 1. Функция с параметрами по умолчанию:

#   1) Создайте функцию print_params(a = 1, b = 'строка', c = True), которая принимает три параметра со значениями
#   по умолчанию (например сейчас это: 1, 'строка', True).
#   2) Функция должна выводить эти параметры.
#   3) Вызовите функцию print_params с разным количеством аргументов, включая вызов без аргументов.
#   4) Проверьте, работают ли вызовы print_params(b = 25) print_params(c = [1,2,3])

# 2. Распаковка параметров:

#   1) Создайте список values_list с тремя элементами разных типов.
#   2) Создайте словарь values_dict с тремя ключами, соответствующими параметрам функции print_params, и значениями
#   разных типов.
#   3) Передайте values_list и values_dict в функцию print_params, используя распаковку параметров (* для списка и **
#   для словаря).

# 3. Распаковка + отдельные параметры:

#   1) Создайте список values_list_2 с двумя элементами разных типов
#   2) Проверьте, работает ли print_params(*values_list_2, 42)


# 1. Функция с параметрами по умолчанию:

# Создал функцию print_params, которая принимает три параметра со значениями по умолчанию (1, 'строка', True)
def print_params(a = 1, b = 'строка', c = True):
    # Функция выводит эти три параметра
    print(a, b, c)

# Вызов функции print_params с разным количеством аргументов, включая вызов без аргументов
print('Вызовы функции print_params:')
# Присвоил аргументам другие значения
print_params(a = 1, b = 'строка 2', c = False)
# Вызвал только аргумент а, присвоив другое значение
print_params(a = 2)
# Вызвал функцию без аргументов
print_params()
# Присвоил аргументу b другой тип и значение, вызов функции сработал
print_params(b = 25)
# Присвоил аргументу с другой тип и значение, вызов функции сработал
print_params(c = [1,2,3])

print()


# 2. Распаковка параметров:

# Создал список values_list с тремя элементами разных типов
values_list = [10, 'строка из values_list', False]

# Создал словарь values_dict с тремя ключами, соответствующими параметрам функции print_params, и значениями разных
# типов
values_dict = {'a': 1, "b" : 'строка', "c" : True}

# Передал список values_dict в функцию print_params, используя распаковку параметров *
print('Распаковка списка values_dict в функцию print_params:')
print_params(*values_list)
# Передал словарь values_dict в функцию print_params, используя распаковку параметров **
print('Распаковка словаря values_dict в функцию print_params:')
print_params(**values_dict)

print()


# 3. Распаковка + отдельные параметры:

# Создал список values_list_2 с двумя элементами разных типов
values_list_2 = [1, True]

# Проверил, работает ли print_params(*values_list_2, 42)
print('Аргументы в функции print_params a, b и c сменили свои значения. a и b на значения из списка, а c на 42:')
print_params(*values_list_2, 42)