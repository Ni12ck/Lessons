# Поток представляет собой минимальную единицу работы, которую операционная система (ОС) должна выполнить. Для того
# чтобы лучше понять, что это такое, нужно знать, что потоки существуют внутри процессов.
# Процесс — это экземпляр программы, который запущен и выполняется операционной системой. Каждый процесс может иметь
# один или несколько потоков, которые работают параллельно.

import threading
import time


# За выполнение отвечает основной поток
def func_1():
    for i in range(10):
        time.sleep(0.5)  # Пауза в полсекунды для проверки демонов
        print(i, threading.current_thread())


# За выполнение отвечает другой поток
def func_2(x):
    for i in range(10):
        time.sleep(1)  # Пауза в одну секунду
        print(i, threading.current_thread())
        # Поток жив? - threading.current_thread().is_alive()
        # print(threading.current_thread().is_alive())


# Создание потока
# Если у функции есть аргументы, то их тоже надо передать кортежем
# Потоки демоны не влияют на завершение программы - daemon=True, то есть если все основные потоки выполнили свою работу,
# программа завершится, не ожидая выполнения потоков демонов
thread = threading.Thread(target=func_2, args=(1,), daemon=True)
# Запуск потока
thread.start()
# Можно приостановить основной поток с помощью join, то есть пока join не выполнится, основной поток не начнёт работу
# thread.join()
print(f'Поток жив? - {thread.is_alive()}')
func_1()
print(f'Список потоков: {threading.enumerate()}')
print(f'Поток, который выполняет функция: {threading.current_thread()}')  # MainThread - главный поток
