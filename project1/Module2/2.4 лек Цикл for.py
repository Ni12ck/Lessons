# В цикле for мы сами задаём количество повторений
# Обычно переменные в цикле for называют i, j или k.
# Обычно, когда цикл встречается один раз, то переменную называют i
# Данная переменная будет существовать только в пределах цикла
# Цикл for повторится столько раз, сколько переменных у нас в последовательности
# for i in 1, 2, 3, 4:
#     print(i)

# for i in 'hello':
#     print(i)

# После команды in мы можем передавать переменные которые хранят в себе некие последовательности, иными словами, итерируемые
# Предположим, что нам надо удалить элемент three
# list_1 = ['one', 'two', 'three']
# for i in list_1:
#     if i == 'three':
#         list_1.remove(i)
# print(list_1)

# Функция range возвращает нам последовательность чисел от 0 до того числа, которое мы укажем в скобках
# for i in range(5): # 0, 1 ,2 ,3 4
#     print(i)

# Можно работать с элементами из списка, например, их заменять
# list_1 = ['one', 'two', 'three']
# for i in range(len(list_1)): # 0, 1, 2
#     # print(list_1[i])
#     list_1[i] = ':)'
# print(list_1)

# Попробуем посчитать сумму элементов
# list_2 = [4, 5, 1, 21, 54, 7]
# sum_list_2 = 0
# for i in list_2:
#     sum_list_2 = sum_list_2 + i
# print(sum_list_2)

# Выведем таблицу умножения от 1 до 10
# for i in range(1, 11): # start, stop, step
# #     pass
# # """
# # 1x1
# # 1x2
# # 1x3
# #
# # """
#     for j in range(1, 11):
#         print(f'{i}x{j}={i*j}')

# Работа со словарём
dict_1 = {'a': 1, 'b': 2, 'c': 3}
# for i in dict_1:
#     print(i, dict_1[i])
for i, k in dict_1.items():
    print(i, k)