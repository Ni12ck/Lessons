# Функция это блок кода, который можно вызвать неограниченное количество раз
# def say_hello(): # say_hello название функции
#     print('hello')
# say_hello()
# Функции бывают обычные, принимающие, возвращающие, анонимные
# Принимающая – это та функция, в момент создания которой мы определяем какое-то значение, которое она будет принимать,
# а значит в момент вызова функции мы также должны будем его передать.
def say_hello(name, value=1.2): # В скобках принимающее значение, можно задать дефолтные значения
    print('hello', name)
    value = value + 1
    print(value)
# В момент вызова надо передать значение в скобках, в данном случае name
say_hello('Владимир', 0)
say_hello('Андрей', 1)
say_hello('Наташа', 2)
say_hello('Ололо')

print()

# Возвращающая функция - что-то возвращает с помощью команды return
# Функция вычисления выйгрышного билета
import random
# def lottery():
#     tickets = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
#     win = random.choice(tickets)
#     return win # return работает почти как break
#
# print(lottery() + lottery())

# Возвращающие и принимающие одновременно
def lottery(mon = 1, thue = 2): # Если мы не знаем сколько параметров будет принимать функция,
    # мы можем написать, например, «*args» для обычных параметров и «**kwargs» для именованных
    tickets = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    win1 = random.choice(tickets)
    tickets.remove(win1)
    win2 = random.choice(tickets)
    print(mon, thue)
    return win1, win2 # return работает почти как break

win1, win2 = lottery('mon', 'thue')
print(win1, win2)

lottery([1,2]) # можно передавать любой тип данных, даже другие функции, например тут список
List_1 = [1,2]
lottery(*List_1) # можно раскрыть список с помощью *, каждому параметру присвоится своё значение соответственно
params = {'mon': 5,'thue': 8}
lottery(**params) # можно распаковать словарь с помощью **
lottery(thue = 9, mon = 3187)